swagger: "2.0"
info:
  title: faxe REST API
  description: API description in Markdown.
  version: 1.0.0
schemes:
  - http
  - https
basePath: /v1
paths:
  /tasks:
    get:
      summary: Returns a list of all tasks currently registered with this faxe instance.
      description: A list of task-representations
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ArrayOfTasks'
        405:
          description: "Method not allowed"
  /tasks/running:
    get:
      summary: Returns a list of all tasks currently running.
      description: none
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ArrayOfTasks'
        405:
          description: "Method not allowed"
  /task/{task_id}:
    get:
      summary: Get a task by its id
      description: none
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Task'
        404:
          description: "Task not found"
        405:
          description: "Method not allowed"
      parameters:
        - in: "path" 
          name: "task_id"
          description: "Id of the task to read"
          required: true
          type: "integer"
  /task/start/{task_id}:
    get:
      summary: Start a task.
      produces:
        - application/json
      responses:
        200:
          description: "Task started successfully"
        404:
          description: "Task could not be found"
        405:
          description: "Method not allowed"
      parameters:
        - in: "path"
          name: "task_id"
          description: "Id of the task, that should be started"
          required: true
          type: "integer"
  /task/start/{task_id}/true:
    get:
      summary: Start a task permanently.
      description: A permanently started task will automatically be started on faxe startup.
      produces:
        - application/json
      responses:
        200:
          description: "Task started successfully"
          schema:
            $ref: '#/definitions/started'
        404:
          description: "Task could not be found"
        405:
          description: "Method not allowed"
      parameters:
        - in: "path"
          name: "task_id"
          description: "Id of the task, that should be started permanently"
          required: true
          type: "integer"
  /task/stop/{task_id}:
    get:
      summary: Stop a task.
      produces:
        - application/json
      responses:
        200:
          description: "Task stopped successfully"
        404:
          description: "Task could not be found"
        405:
          description: "Method not allowed"
      parameters:
        - in: "path"
          name: "task_id"
          description: "Id of the task, that should be stopped"
          required: true
          type: "integer"
  /task/stop/{task_id}/true:
    get:
      summary: Stop a task permanently.
      description: A permanently stopped task will NOT automatically be started on faxe startup anymore.
      produces:
        - application/json
      responses:
        200:
          description: "Task stopped successfully"
        404:
          description: "Task could not be found"
        405:
          description: "Method not allowed"
      parameters:
        - in: "path"
          name: "task_id"
          description: "Id of the task, that should be stopped permanently"
          required: true
          type: "integer"
  /task/register:
    post:
      summary: "Register a task with faxe."
      description: "Provide a dfs script and a name for the new task"
      produces:
        - application/json
      consumes:
        - application/x-www-form-urlencoded
      responses:
        200:
          description: "Successfully parsed registered task"
          schema:
            properties:
              id:
                type: integer
                description: The newly created task ID
              name:
                type: string
                description: The task name
              success:
                type: boolean
                default: true
        400:
          description: "Error creating or parsing the task"
          schema:
            properties:
              success:
                type: boolean
                default: false
              error:
                type: string
                description: error message
        405:
          description: "Method not allowed"
      parameters:
        - in: "formData"
          name: "name"
          description: "Name for the newly registered task"
          type: "string"
        - in: "formData"
          name: "dfs"
          description: "A valid dfs script"
          type: "string"
  /task/update/{task_id}:
    post:
      summary: "Update an existing task."
      description: "Provide a dfs script and a name, update can be done while a task is running!"
      produces:
        - application/json
      consumes:
        - application/x-www-form-urlencoded
      responses:
        200:
          description: "Successfully updated task"
          schema:
            properties:
              id:
                type: integer
                description: The task ID
              name:
                type: string
                description: The task name
              success:
                type: boolean
                default: true
        400:
          description: "Error updating the task"
          schema:
            properties:
              success:
                type: boolean
                default: false
              error:
                type: string
                description: error message
        404:
          description: "Task not found"
        405:
          description: "Method not allowed"
      parameters:
        - in: "formData"
          name: "name"
          description: "Task name"
          type: "string"
        - in: "formData"
          name: "dfs"
          description: "A valid dfs script"
          type: "string"
  /task/from_template/{template_id}/{task_name}:
    post:
      summary: "Create a new task from an existing template."
      description: "Registers a new task with name 'name' from the template with id 'template_id'."
      produces:
        - application/json
      responses:
        200: 
          description: "Task successfully registered"
        404:
          description: "Template with id 'template_id' not found."
        405:
          description: "Method not allowed"
      parameters:
        - in: "path"
          name: "template_id"
          type: "integer"
          required: true
        - in: "path"
          name: "task_name"
          type: "string"
          required: true
  /task/delete/{task_id}:
    delete:
      summary: "Delete a task by it's id."
      produces:
        - application/json
      responses:
        200:
          description: "Task successfully deleted."
        404:
          description: "Task with id 'task_id' could not be found."
        405:
          description: "Method not allowed"
        406:
          description: "Task is running and must be stopped before it can be deleted."
      parameters:
        - in: "path"
          name: "task_id"
          type: "integer"
          required: true
  /templates:
    get:
      summary: Returns a list of all templates currently registered with this faxe instance.
      description: A list of template-representations
      produces:
        - application/json
      responses:
        200:
          description: OK
  /template/{template_id}:
    get:
      summary: Get a template by its id
      description: none
      produces:
        - application/json
      responses:
        200:
          description: OK
        404:
          description: "Template not found"
        405:
          description: "Method not allowed"
      parameters:
        - in: "path" 
          name: "template_id"
          description: "Id of the template to read"
          required: true
          type: "integer"      
  /template/register:
    post:
      summary: "Register a template with faxe."
      description: "Provide a dfs script and a name for the new template"
      produces:
        - application/json
      consumes:
        - application/x-www-form-urlencoded
      responses:
        200:
          description: "Successfully parsed and registered template"
        405:
          description: "Method not allowed"
      parameters:
        - in: "formData"
          name: "name"
          description: "Name for the newly registered template"
          type: "string"
        - in: "formData"
          name: "dfs"
          description: "A valid dfs script"
          type: "string"  
  /template/delete/{template_id}:
    delete:
      summary: "Delete a template by it's id."
      produces:
        - application/json
      responses:
        200:
          description: "Template successfully deleted."
        404:
          description: "Template with id 'task_id' could not be found."
        405:
          description: "Method not allowed"
      parameters:
        - in: "path"
          name: "template_id"
          type: "integer"
          required: true



definitions:
  started:
    type: object
    properties:
      ok:
        type: string
        description: "started"
  stopped:
    type: object
    properties:
      error:
        type: string
        description: error string
  Task:
    type: object
    properties:
      id:
        type: integer
        description: The task ID
      name:
        type: string
        description: The task name
      dfs:
        type: string
        description: The DFS Script
      running:
        type: boolean
        description: Whether the task is running at the moment
      permanent:
        type: boolean
        description: Whether the task is to be started permanent
      created:
        type: string
        format: ISO8601
        description: Time the task was created
      last_start:
        type: string
        format: ISO8601
        description: Time the task was last started
      last_stop:
        type: string
        format: ISO8601
        description: Time the task was last stopped
  ArrayOfTasks:
    type: array
    items:
      $ref: '#/definitions/Task'
